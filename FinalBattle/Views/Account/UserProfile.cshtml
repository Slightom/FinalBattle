@using FinalBattle.Enums
@using FinalBattle.Models
@model FinalBattle.Models.AccountViewModels.UserProfileViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="homeRow">

    <h3>
        @Html.ActionLink("Wyloguj", "LogOff", "Account", routeValues: null, htmlAttributes: null)
    </h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nick, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top:7px">
                @Html.EditorFor(model => model.Nick, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                @Html.ValidationMessageFor(model => model.Nick, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top:7px">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@if (Model.PostText == "")
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="margin-top:7px">
                    <label>Co sądzisz o zepole Tytanik? Napisz proszę swoją opinię.</label>
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label(null, "Twoja opinia o zespole", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top: 7px;">
                @Html.EditorFor(model => model.PostText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostText, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @if (Model.PostText != "")
        {

        <div class="form-group">
            @Html.Label(null, "Status Twojej opinii", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top: 7px;">
                @Html.Label(null, Model.PostStatus, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="margin-top:2px">
                    <button type="button" onclick="DeletePost()" class="btn btn-danger">Usuń opinię</button>
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="margin-top:7px">
                <input type="submit" value="Zapisz ustawienia profilu" class="btn btn-success" />
            </div>
        </div>
    </div>
    }

</div>


<script type="text/javascript">

    function DeletePost() {
        window.location.href = '@Url.Action("DeletePost", "Account")';
    }
</script>