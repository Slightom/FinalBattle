@using FinalBattle.Enums
@model FinalBattle.Models.Song

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="homeRow">
    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Song</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.SongID)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DisplayTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.EditorFor(model => model.DisplayTitle, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                    @Html.ValidationMessageFor(model => model.DisplayTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.Label("Author")
                </div>
                <div class="col-md-10" style="margin-top:7px">
                    @Html.DropDownList("Authors", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group" style="display:none" id="author2">
                <div class="control-label col-md-2">
                    @Html.Label("Author2")
                </div>
                <div class="col-md-10" style="margin-top:7px">
                    @Html.DropDownList("Authors2", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group" style="display:none" id="author3">
                <div class="control-label col-md-2">
                    @Html.Label("Author3")
                </div>
                <div class="col-md-10" style="margin-top:7px">
                    @Html.DropDownList("Authors3", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    <div>
                        <button type="button" class="btn-success" onclick="addAuthorField()" id="addAuthorBtn" style="width:160px;">Dodaj autora</button>
                    </div>
                    <div>
                        <button type="button" class="btn-danger" onclick="removeAuthorField()" id="removeAuthorBtn" style="display:none; width:160px;">Usuń autora</button>
                    </div>
                </div>
            </div>

            <hr />
            <div class="row">
                <div class="control-label col-md-2">
                    @Html.Label("Categories")
                </div>

                @for (int i = 0; i < ViewBag.CategoriesAmount; i++)
                {
                    if (i != 0 && i % 5 == 0)
                    {
                    @:</div>
                    @:<div class="row">
                        @:<div class="col-md-2"></div>
                    }

                    string s = "Category-" + @ViewBag.Categories[i].Category.CategoryID;
                    <div class="form-group col-md-2" style="margin-left: 10px;">
                        <label class="container2">
                            @ViewBag.Categories[i].Category.Name
                            @if (ViewBag.Categories[i].isChecked)
                            {
                                <input class="form-control myCheckBox" type="checkbox" checked="checked" name=@s id="@ViewBag.Categories[i].Category.Name" value="@ViewBag.Categories[i].Category.Name">
                            }
                            else
                            {
                                <input class="form-control myCheckBox" type="checkbox" name=@s id="@ViewBag.Categories[i].Category.Name" value="@ViewBag.Categories[i].Category.Name">
                            }
                            <span class="checkmark"></span>
                        </label>
                    </div>
                }
            </div>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.WithBacking, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    <label class="container2">
                        @Html.EditorFor(model => model.WithBacking)
                        <span class="checkmark"></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.WithBacking, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                    @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TextLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.DropDownListFor(m => m.TextLanguage, Html.GetEnumSelectList(typeof(LanguageEnum)), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TextLanguage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AuthorInTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">

                    <label class="container2">
                        @Html.EditorFor(model => model.AuthorInTitle)
                        <span class="checkmark"></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.AuthorInTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        var authorsAmount = '@ViewBag.AuthorsAmount';

        if (authorsAmount > 2)
        {
            $("#author2").slideToggle("slow");
            $("#author3").slideToggle("slow");
            $("#removeAuthorBtn").slideToggle("slow");
            $("#addAuthorBtn").slideToggle("slow");
        }
        else if (authorsAmount > 1) {
            $("#author2").slideToggle("slow");
            $("#removeAuthorBtn").slideToggle("slow");
        }
        else
        {
            $("#Authors2").val(null);
            $("#Authors3").val(null);
        }
    });

    function addAuthorField() {
        var author2display = $("#author2").css('display');
        var author3display = $("#author3").css('display');

        if (author2display == 'none') {
            $("#author2").slideToggle("slow");
            $("#removeAuthorBtn").slideToggle("slow");

        }
        else if (author3display == 'none') {
            $("#author3").slideToggle("slow");
            $("#addAuthorBtn").slideToggle("slow");
        }
    }

    function removeAuthorField() {
        var author2display = $("#author2").css('display');
        var author3display = $("#author3").css('display');

        if (!(author3display == 'none')) {
            $("#author3").slideToggle("slow");
            $("#addAuthorBtn").slideToggle("slow");
            $("#Authors3").val(null);
        }
        else if (!(author2display == 'none')) {
            $("#author2").slideToggle("slow");
            $("#removeAuthorBtn").slideToggle("slow");
            $("#Authors2").val(null);
        }
    }

</script>

