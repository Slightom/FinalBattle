@using FinalBattle.Enums
@model FinalBattle.Models.Backing

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="homeRow">
    <h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Backing</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.BackingID)

            <div class="form-group">
                @Html.LabelFor(model => model.SongID, "Song", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.DropDownList("SongID", null, htmlAttributes: new { @class = "form-control", style = "width: 100%; max-width: 100%;" })
                    @Html.ValidationMessageFor(model => model.SongID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BackingStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.DropDownListFor(model => model.BackingStatus, Html.GetEnumSelectList(typeof(BackingStatusEnum)), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BackingStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    @Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;" } })
                    @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.ActionLink("Change", "UploadBacking", new { id = Model.BackingID })
                </div>
                <div class="col-md-10" style="margin-top:7px">
                    <audio controls>
                        <source src="~/Music/@(Model.Name)" type="audio/mpeg" class="audioSource">
                    </audio>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MainBacking, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top:7px">
                    <label class="container2">
                        @Html.EditorFor(model => model.MainBacking)
                        <span class="checkmark"></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.MainBacking, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="margin-top:7px">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>